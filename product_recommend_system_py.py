# -*- coding: utf-8 -*-
"""product_recommend_system.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Vb9_55JgNr1QYAZtUo_ILHKcGt8AcSoe
"""

import pandas as pd
import numpy as np

lst_order = pd.read_csv('/content/drive/MyDrive/List of Orders.csv')
order_detail = pd.read_csv('/content/drive/MyDrive/Order Details.csv')
sales_target = pd.read_csv('/content/drive/MyDrive/Sales target.csv')

lst_order.head()

order_detail.head()

sales_target.head()

order_detail.dropna(inplace=True)

order_detail.isnull().sum()

order_detail = order_detail.drop_duplicates()

order_detail.duplicated().sum()

order_detail

#order_detail['Sub-Category'] = order_detail['Sub-Category'].apply(lambda x:[i.replace(" ", "") for i in x])
order_detail.head(10)

order_detail['tags'] = order_detail['category'] + order_detail['sub_category']

order_detail.head()

new_df = order_detail[['Order ID','category','sub_category','tags']]
new_df

pip install nltk

import nltk

from nltk.stem.porter import PorterStemmer
ps = PorterStemmer()

def stem(text):
  y = []
  for i in text.split():
    y.append(ps.stem(i))
  return " ".join(y)

new_df['tags'] = new_df['tags'].apply(stem)

new_df['tags'][0]

from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer(max_features=5000,stop_words="english")

vectors = cv.fit_transform(new_df['tags']).toarray()

vectors

cv.get_feature_names_out()

from sklearn.metrics.pairwise import cosine_similarity

similarity = cosine_similarity(vectors)

similarity

sorted(list(enumerate(similarity[0])), reverse = True, key = lambda x:x[1])[1:51]

def recommend(product):
  product_index = new_df[new_df['sub_category'] == product].index[0]
  distances = similarity[product_index]
  product_list = sorted(list(enumerate(distances)), reverse = True, key = lambda x:x[1])[1:51]
  for i in product_list:
    print(new_df.iloc[i[0]].sub_category)

recommend('Trousers')

